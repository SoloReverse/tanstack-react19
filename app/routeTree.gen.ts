/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as LayoutBusinessImport } from './routes/_layout.business'
import { Route as LayoutBusinessLoginImport } from './routes/_layout.business.login'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBusinessRoute = LayoutBusinessImport.update({
  id: '/business',
  path: '/business',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBusinessLoginRoute = LayoutBusinessLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LayoutBusinessRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/business': {
      id: '/_layout/business'
      path: '/business'
      fullPath: '/business'
      preLoaderRoute: typeof LayoutBusinessImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/business/login': {
      id: '/_layout/business/login'
      path: '/login'
      fullPath: '/business/login'
      preLoaderRoute: typeof LayoutBusinessLoginImport
      parentRoute: typeof LayoutBusinessImport
    }
  }
}

// Create and export the route tree

interface LayoutBusinessRouteChildren {
  LayoutBusinessLoginRoute: typeof LayoutBusinessLoginRoute
}

const LayoutBusinessRouteChildren: LayoutBusinessRouteChildren = {
  LayoutBusinessLoginRoute: LayoutBusinessLoginRoute,
}

const LayoutBusinessRouteWithChildren = LayoutBusinessRoute._addFileChildren(
  LayoutBusinessRouteChildren,
)

interface LayoutRouteChildren {
  LayoutBusinessRoute: typeof LayoutBusinessRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutBusinessRoute: LayoutBusinessRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/business': typeof LayoutBusinessRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/business/login': typeof LayoutBusinessLoginRoute
}

export interface FileRoutesByTo {
  '/business': typeof LayoutBusinessRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/business/login': typeof LayoutBusinessLoginRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/business': typeof LayoutBusinessRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/business/login': typeof LayoutBusinessLoginRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/business' | '/' | '/business/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/business' | '/' | '/business/login'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/business'
    | '/_layout/'
    | '/_layout/business/login'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/business",
        "/_layout/"
      ]
    },
    "/_layout/business": {
      "filePath": "_layout.business.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/business/login"
      ]
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/_layout/business/login": {
      "filePath": "_layout.business.login.tsx",
      "parent": "/_layout/business"
    }
  }
}
ROUTE_MANIFEST_END */
